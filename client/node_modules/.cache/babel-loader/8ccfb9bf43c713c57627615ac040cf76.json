{"ast":null,"code":"var _jsxFileName = \"/Users/alysurr/Documents/alyssa-challender-brainflix/src/pages/HomePage/HomePage.jsx\";\nimport '../../App.scss';\nimport React, { Component } from 'react';\nimport Header from '../../components/Header/Header.jsx';\nimport Video from '../../components/Video/Video.jsx';\nimport Info from '../../components/Info/Info.jsx';\nimport Comments from '../../components/Comments/Comments.jsx';\nimport Sidebar from '../../components/Sidebar/Sidebar.jsx';\nimport videosData from '../../data/videos.json'; // Get rid of this later\n\nimport videosDetails from '../../data/video-details.json'; // Get rid of this later\n\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass HomePage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      videos: [],\n      selectedVideo: null\n    };\n\n    this.getVideoDetails = videoId => {\n      axios.get(`${API_URL}/${videoId}${API_KEY}`).then(response => {\n        this.setState({\n          selectedDetails: response.data\n        });\n      });\n    };\n\n    this.changeVideo = id => {\n      let newVideo = this.state.videos.find(video => video.id === id);\n      let newDetails = this.state.details.find(detail => detail.id === id);\n      this.setState({\n        selectedVideo: newVideo,\n        selectedDetails: newDetails\n      });\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    // if the previous props are the same as this.props after setState updates this component, we don't want to setState again, because this will be an infinite loop\n    if (prevProps.match.params.videoId !== this.props.match.params.videoId) {\n      this.getVideoDetail(this.props.match.params.videoId);\n    }\n  }\n\n  componentDidMount() {\n    axios.get(`${API_URL}${API_KEY}`).then(response => {\n      this.setState({\n        plants: response.data\n      });\n      const plantId = this.props.match.params.plantId || response.data[0].id;\n      this.getVideoDetail(videoId);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Video, {\n        video: this.state.selectedVideo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container--left\",\n          children: [/*#__PURE__*/_jsxDEV(Info, {\n            video: this.state.selectedVideo,\n            detail: this.state.selectedDetails\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Comments, {\n            video: this.state.selectedVideo,\n            detail: this.state.selectedDetails\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container--right\",\n          children: /*#__PURE__*/_jsxDEV(Sidebar, {\n            videos: this.state.videos.filter(video => this.state.selectedVideo.id !== video.id),\n            handleClick: this.changeVideo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default HomePage;","map":{"version":3,"sources":["/Users/alysurr/Documents/alyssa-challender-brainflix/src/pages/HomePage/HomePage.jsx"],"names":["React","Component","Header","Video","Info","Comments","Sidebar","videosData","videosDetails","axios","HomePage","state","videos","selectedVideo","getVideoDetails","videoId","get","API_URL","API_KEY","then","response","setState","selectedDetails","data","changeVideo","id","newVideo","find","video","newDetails","details","detail","componentDidUpdate","prevProps","match","params","props","getVideoDetail","componentDidMount","plants","plantId","render","filter"],"mappings":"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","sourcesContent":["import '../../App.scss';\nimport React, { Component } from 'react';\nimport Header from '../../components/Header/Header.jsx';\nimport Video from '../../components/Video/Video.jsx';\nimport Info from '../../components/Info/Info.jsx';\nimport Comments from '../../components/Comments/Comments.jsx';\nimport Sidebar from '../../components/Sidebar/Sidebar.jsx';\nimport videosData from '../../data/videos.json'; // Get rid of this later\nimport videosDetails from '../../data/video-details.json'; // Get rid of this later\nimport axios from 'axios';\n\n\n\nclass HomePage extends Component  {\n  \n  state = {\n      videos: [],\n      selectedVideo: null,\n  }\n\n    getVideoDetails = (videoId) => {\n        axios\n            .get(`${API_URL}/${videoId}${API_KEY}`)\n            .then((response) => {\n                this.setState({\n                    selectedDetails: response.data,\n                });\n            });\n    };\n\n    componentDidUpdate(prevProps) {\n        // if the previous props are the same as this.props after setState updates this component, we don't want to setState again, because this will be an infinite loop\n        if (\n            prevProps.match.params.videoId !== this.props.match.params.videoId\n        ) {\n            this.getVideoDetail(this.props.match.params.videoId);\n        }\n    }\n\n    componentDidMount() {\n        axios\n            .get(`${API_URL}${API_KEY}`)\n            .then((response) => {\n                this.setState({\n                    plants: response.data,\n                });\n\n                const plantId =\n                    this.props.match.params.plantId || response.data[0].id;\n\n                this.getVideoDetail(videoId);\n            });\n    }\n\n  changeVideo = (id) => {\n    let newVideo = this.state.videos.find(video => video.id === id)\n    let newDetails = this.state.details.find(detail => detail.id === id)\n\n    this.setState({\n      selectedVideo: newVideo,\n      selectedDetails: newDetails\n    })\n  }\n\n  render() {\n    return (\n      <>\n      <Header />\n      <Video video={this.state.selectedVideo}/>\n      <div className=\"container\">\n        <div className=\"container--left\">\n          <Info video={this.state.selectedVideo} detail={this.state.selectedDetails}/>\n          <Comments video={this.state.selectedVideo} detail={this.state.selectedDetails}/>\n        </div>\n        <div className=\"container--right\">\n          <Sidebar\n            videos={this.state.videos.filter(video => this.state.selectedVideo.id !== video.id)}\n            handleClick={this.changeVideo} />\n        </div>\n      </div>\n      </>\n    );\n  }\n}\n\nexport default HomePage;\n"]},"metadata":{},"sourceType":"module"}