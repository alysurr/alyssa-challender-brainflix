{"ast":null,"code":"var _jsxFileName = \"/Users/alysurr/Documents/alyssa-challender-brainflix/src/components/Header/Header.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport profileImg from '../../assets/Images/Mohan-muruge.jpg';\nimport logo from \"../../assets/Logo/Logo-brainflix.svg\";\nimport searchIcon from \"../../assets/Icons/Icon-search.svg\";\nimport uploadIcon from \"../../assets/Icons/Icon-upload.svg\";\nimport searchData from '../../data/videos.json';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Header() {\n  _s();\n\n  const [searchTerm, setSearchTerm] = useState('');\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header__logo-container\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          alt: \"brainflix logo\",\n          className: \"header__logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search\",\n      class: \"header__input\",\n      onChange: event => {\n        setSearchTerm(event.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), searchData.filter(val => {\n      if (searchTerm === \"\") {\n        return val;\n      } else if (val.title.toLowerCase().includes(searchTerm.toLowerCase())) {\n        return val;\n      }\n    }).map((val, key) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"searchResults\"\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"header__button\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: uploadIcon,\n        alt: \"upload icon\",\n        className: \"header__icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), \"upload\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header__img-container\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: profileImg,\n        alt: \"user profile default\",\n        className: \"header__img\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Header, \"a1cMJ8t0eYFnsCEdGcHtaGJdbCM=\");\n\n_c = Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["/Users/alysurr/Documents/alyssa-challender-brainflix/src/components/Header/Header.jsx"],"names":["React","profileImg","searchData","useState","Header","searchTerm","setSearchTerm","logo","event","target","value","filter","val","title","toLowerCase","includes","map","key","uploadIcon"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,sCAAvB;;;;AAIA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAIA,eAAe,SAASC,MAAT,GAAkB;AAAA;;AAC7B,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BH,QAAQ,CAAC,EAAD,CAA5C;AACA,sBACI;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA,6BACI;AAAG,QAAA,IAAI,EAAC,GAAR;AAAA,+BAAY;AACR,UAAA,GAAG,EAAEI,IADG;AAER,UAAA,GAAG,EAAC,gBAFI;AAGR,UAAA,SAAS,EAAC;AAHF;AAAA;AAAA;AAAA;AAAA;AAAZ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAQI;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,WAAW,EAAC,QAFhB;AAGI,MAAA,KAAK,EAAC,eAHV;AAII,MAAA,QAAQ,EAAEC,KAAK,IAAI;AAACF,QAAAA,aAAa,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAb;AACnB;AALL;AAAA;AAAA;AAAA;AAAA,YARJ,EAeKR,UAAU,CAACS,MAAX,CAAmBC,GAAD,IAAS;AACxB,UAAIP,UAAU,KAAK,EAAnB,EAAuB;AACnB,eAAOO,GAAP;AACH,OAFD,MAEO,IAAIA,GAAG,CAACC,KAAJ,CAAUC,WAAV,GAAwBC,QAAxB,CAAiCV,UAAU,CAACS,WAAX,EAAjC,CAAJ,EAAgE;AACnE,eAAOF,GAAP;AACH;AACJ,KANA,EAMEI,GANF,CAMM,CAACJ,GAAD,EAAMK,GAAN,KAAc;AACjB,0BACI;AAAK,QAAA,SAAS,EAAC;AAAf,SAAoCA,GAApC;AAAA;AAAA;AAAA;AAAA,cADJ;AAGH,KAVA,CAfL,eA0BI;AAAQ,MAAA,SAAS,EAAC,gBAAlB;AAAA,8BACI;AACI,QAAA,GAAG,EAAEC,UADT;AAEI,QAAA,GAAG,EAAC,aAFR;AAGI,QAAA,SAAS,EAAC;AAHd;AAAA;AAAA;AAAA;AAAA,cADJ;AAAA;AAAA;AAAA;AAAA;AAAA,YA1BJ,eAiCI;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA,6BACI;AAAK,QAAA,GAAG,EAAEjB,UAAV;AAAqB,QAAA,GAAG,EAAC,sBAAzB;AAAgD,QAAA,SAAS,EAAC;AAA1D;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAjCJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAuCH;;GAzCuBG,M;;KAAAA,M","sourcesContent":["import React from 'react';\nimport profileImg from '../../assets/Images/Mohan-muruge.jpg';\nimport logo from '../../assets/Logo/Logo-brainflix.svg';\nimport searchIcon from '../../assets/Icons/Icon-search.svg';\nimport uploadIcon from '../../assets/Icons/Icon-upload.svg';\nimport searchData from '../../data/videos.json';\nimport { useState } from 'react';\n\n\n\nexport default function Header() {\n    const [searchTerm, setSearchTerm] = useState('');\n    return (\n        <header>\n            <div className=\"header__logo-container\">\n                <a href=\"/\"><img\n                    src={logo}\n                    alt=\"brainflix logo\"\n                    className=\"header__logo\"\n                /></a>\n            </div>\n            <input\n                type=\"text\"\n                placeholder=\"Search\"\n                class=\"header__input\"\n                onChange={event => {setSearchTerm(event.target.value);\n                }}\n            />\n            {searchData.filter((val) => {\n                if (searchTerm === \"\") {\n                    return val\n                } else if (val.title.toLowerCase().includes(searchTerm.toLowerCase())) {\n                    return val\n                }\n            }).map((val, key) => {\n                return (\n                    <div className=\"searchResults\" key={key}></div>\n                )\n            })}\n            <button className=\"header__button\">\n                <img\n                    src={uploadIcon}\n                    alt=\"upload icon\"\n                    className=\"header__icon\"\n                />\n                upload</button>\n            <div className=\"header__img-container\">\n                <img src={profileImg}alt=\"user profile default\" className=\"header__img\" />\n            </div>\n        </header>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}