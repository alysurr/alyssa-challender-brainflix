{"ast":null,"code":"var _jsxFileName = \"/Users/alysurr/Documents/alyssa-challender-brainflix/src/pages/HomePage/HomePage.jsx\";\nimport '../../App.scss';\nimport React, { Component } from 'react';\nimport Header from '../../components/Header/Header.jsx';\nimport Video from '../../components/Video/Video.jsx';\nimport Info from '../../components/Info/Info.jsx';\nimport Comments from '../../components/Comments/Comments.jsx';\nimport Sidebar from '../../components/Sidebar/Sidebar.jsx';\nimport { API_KEY, API_URL } from '../../utils';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass HomePage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      videos: [],\n      selectedVideo: null\n    };\n\n    this.getVideoDetails = videoId => {\n      setTimeout(() => {\n        axios.get(`${API_URL}/${videoId}${API_KEY}`).then(response => {\n          this.setState({\n            selectedVideo: response.data\n          });\n          console.log(response.data);\n        });\n      }, 1);\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    // if the previous props are the same as this.props after setState updates this component, we don't want to setState again, because this will be an infinite loop\n    if (prevProps.match.params.videoId !== this.props.match.params.videoId) {\n      this.getVideoDetail(this.props.match.params.videoId);\n    }\n  }\n\n  componentDidMount() {\n    setTimeout(() => {\n      axios.get(`${API_URL}${API_KEY}`).then(response => {\n        this.setState({\n          videos: response.data\n        });\n        const videoId = this.props.match.params.videoId || response.data[0].id;\n        this.getVideoDetails(videoId);\n      });\n    }, 1);\n  } // changeVideo = (id) => {\n  //      let newVideo = this.state.videos.find(video => video.id === id)\n  //     this.setState({\n  //       selectedVideo: newVideo,\n  //      })\n  //    }\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Video, {\n        video: this.state.videos\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container--left\",\n          children: [/*#__PURE__*/_jsxDEV(Info, {\n            video: this.state.selectedVideo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Comments, {\n            video: this.state.selectedVideo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container--right\",\n          children: /*#__PURE__*/_jsxDEV(Sidebar, {\n            videos: this.state.videos.filter(video => this.state.selectedVideo.id !== video.id),\n            handleClick: this.changeVideo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default HomePage;","map":{"version":3,"sources":["/Users/alysurr/Documents/alyssa-challender-brainflix/src/pages/HomePage/HomePage.jsx"],"names":["React","Component","Header","Video","Info","Comments","Sidebar","API_KEY","API_URL","axios","HomePage","state","videos","selectedVideo","getVideoDetails","videoId","setTimeout","get","then","response","setState","data","console","log","componentDidUpdate","prevProps","match","params","props","getVideoDetail","componentDidMount","id","render","filter","video","changeVideo"],"mappings":"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","sourcesContent":["import '../../App.scss';\nimport React, { Component } from 'react';\nimport Header from '../../components/Header/Header.jsx';\nimport Video from '../../components/Video/Video.jsx';\nimport Info from '../../components/Info/Info.jsx';\nimport Comments from '../../components/Comments/Comments.jsx';\nimport Sidebar from '../../components/Sidebar/Sidebar.jsx';\nimport { API_KEY, API_URL } from '../../utils';\nimport axios from 'axios';\n\n\n\nclass HomePage extends Component  {\n  \n  state = {\n      videos: [],\n      selectedVideo: null,\n  }\n\n    getVideoDetails = (videoId) => {\n        setTimeout(() => {\n        axios\n            .get(`${API_URL}/${videoId}${API_KEY}`)\n            .then((response) => {\n                this.setState({\n                    selectedVideo: response.data,\n                });\n                console.log(response.data)\n            });\n            }, 1)\n    }\n\n    componentDidUpdate(prevProps) {\n        // if the previous props are the same as this.props after setState updates this component, we don't want to setState again, because this will be an infinite loop\n        if (\n            prevProps.match.params.videoId !== this.props.match.params.videoId\n        ) {\n            this.getVideoDetail(this.props.match.params.videoId);\n        }\n    }\n\n    componentDidMount() {\n        setTimeout(() => {\n        axios\n            .get(`${API_URL}${API_KEY}`)\n            .then((response) => {\n                this.setState({\n                    videos: response.data,\n                });\n\n                const videoId =\n                    this.props.match.params.videoId || response.data[0].id;\n\n                this.getVideoDetails(videoId);\n            });}, 1)\n    }\n\n// changeVideo = (id) => {\n//      let newVideo = this.state.videos.find(video => video.id === id)\n\n//     this.setState({\n//       selectedVideo: newVideo,\n//      })\n//    }\n\n  render() {\n    return (\n      <>\n      <Header />\n      <Video video={this.state.videos}/>\n      <div className=\"container\">\n        <div className=\"container--left\">\n          <Info video={this.state.selectedVideo}/>\n          <Comments video={this.state.selectedVideo}/>\n        </div>\n        <div className=\"container--right\">\n          <Sidebar\n            videos={this.state.videos.filter(video => this.state.selectedVideo.id !== video.id)}\n            handleClick={this.changeVideo} />\n        </div>\n      </div>\n      </>\n    );\n  }\n}\n\nexport default HomePage;\n"]},"metadata":{},"sourceType":"module"}